<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title>AI in the Game of Diplomacy: AiClient 8~2 Release Notice</title>
<link rel="stylesheet" type="text/css" href="../../../../global.css">
<script type="text/javascript" src="../../../../analytics.js"></script>
</head>

<body>

<div align="center">
  <center>
  <table border="1" width="373">
    <tr>
      <td class="title" width="363">
        <h2 align="center" class="t2">Diplomacy</h2>
        <h1 align="center">AiClient</h1>
        <h3 align="center">Release 8~2</h3>
        <h1 align="center" class="t1">Release Notice</h1>
        <p align="center" class="t1">Issue 1b</p>
        <p align="center"><a href="../../../../aboutme.htm">John
        Newbury</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;24 November 2012
      </td>
    </tr>
  </table>
  </center>
</div>

<p align="center"><a href="../../../../index.htm">Home</a> &gt; <a href="../../../tournaments/index.htm">Diplomacy</a>
&gt; <a href="../../index.htm">Downloads</a> &gt; <a href="release-notice.htm">AiClient</a> &gt;
AiClient 8~2 Release Notice</p>

<p align="center"><i>AI in the Game of Diplomacy: AiClient 8~2 Release Notice </i> </p>

<hr size="6" noshade color="#00FFFF">

<p align="center"><b>Read the <i><a href="conditions-of-use.htm">AiClient
8~2 Conditions of Use</a> </i>before use.</b></p>

<h2 align="left"><b>The Product</b></h2>

<p align="left">This product is called <b>AiClient Release 8~2</b>. As David Norman did not assign a version to his AiClient
Framework, as such, the <i>8</i> here means derived from the full (common and
client-specific) sources as they were when he released his then most recent
client, <i>DumbBot 8</i>; the <i>~2</i> means my modification 2. It
comprises two very similar sub-products:</p>

<ul>
  <li>
    <p align="left"> <b>AiClient Release 8~2~a</b> – using Microsoft
    Foundation Class (MFC)</li>
  <li>
    <p align="left"> <b>AiClient Release 8~2~b</b> – <i>not</i> using Microsoft
    Foundation Class (MFC)</li>
</ul>

<p align="left">Each sub-product comprises David Norman's AiClient Framework and his
clients that are built upon it: <i>BaseBot</i> (the default, a non-playing observer),
<i>DumbBot</i>, <i>
HoldBot</i> and <i> RandBot</i> – all modified by John Newbury. All the
clients have the same version as their sub-release: 8~2~&lt;x&gt;, where
&lt;x&gt; is a or b. Apart from essential differences
due to the presence or absence of MFC, each should be very similar to develop.
Despite the source differences, it is unlikely, albeit possible, that there would be any
significant differences between <i>any</i> versions of a given client (<i>a</i>
or <i>b</i>; old or new), in terms of performance or reliability, in general or
in AI aspects, albeit there are minor differences in functionality and appearance in some
cases.</p>

<p align="left">The extra functionality and convenience of MFC may be preferred by developers
that have access to it (only
available in expensive editions of Visual Studio). But the non-MFC form is also
usable in the (free) Express editions of Visual Studio (which lack MFC), and
would require less work to convert to a non-Microsoft platform. The two forms may
provide a useful comparison of the two development environments. One of these
clients should provide a simple and sound basis for developing further, more
advanced, kinds.</p>

<h3 align="left">Binary</h3>

<p align="left">The binary of all the above clients may be downloaded from <a href="aiclient-8~2~b-binary.zip">johnnewbury.me.uk/diplomacy/downloads/aiclient/aiclient-8~2~b-binary.zip</a>
.</p>

<p align="left">It comprises:</p>

<ul>
  <li>
    <p align="left">aiclient-8~2-release-notice.htm
    <ul>
      <li>
        <p align="left">This Release Notice.</li>
    </ul>
  </li>
  <li>
    <p align="left">aiclient-8~2-conditions-of-use.htm
    <ul>
      <li>
        <p align="left">Conditions of Use.</li>
    </ul>
  </li>
  <li>
    <p align="left">Binary
    <ul>
      <li>
        <p align="left">A folder containing binary versions of each supplied
        client:&nbsp;
        <ul>
          <li>
            <p align="left">BaseBot.exe,</li>
          <li>
            <p align="left">DumbBot.exe,</li>
          <li>
            <p align="left">HoldBot.exe,</li>
          <li>
            <p align="left">RandBot.exe.</li>
        </ul>
      </li>
      <li>
        <p align="left">Each was generated from the non-MFC (b) source of this release, using
        the free Visual Studio 10 Express edition, running under Windows 7. For
        precision, all
        display their versions as 8~2~b (on the title bar, and, unless just an
        observer, in AiServer's list). However, no significant differences are
        expected if generated from the MFC (a) source, or by another edition of
        Visual Studio. (The version of Windows used to generate the binary
        should make no difference – assuming Visual Studio can then produce
        it). Hence only one form of the binary of each client are released.</li>
      <li>
        <p align="left">No further files are required, other than those already
        in Windows.</li>
    </ul>
  </li>
</ul>
<h3 align="left">Source</h3>
<p align="left">The full source (AiClient Framework and that specific to each
client, above) may be downloaded from:</p>
<ul>
  <li>
    <p align="left"><a href="aiclient-8~2~a-source.zip">johnnewbury.me.uk/diplomacy/downloads/aiclient/aiclient-8~2~a-source.zip</a>
    (MFC) or</li>
  <li>
    <p align="left"><a href="aiclient-8~2~b-source.zip">johnnewbury.me.uk/diplomacy/downloads/aiclient/aiclient-8~2~b-source.zip</a>
    (non-MFC).</li>
</ul>
<p align="left">Each comprises:</p>
<ul>
  <li>
    <p align="left">aiclient-8~2-release-notice.htm
    <ul>
      <li>
        <p align="left">This Release Notice.</li>
    </ul>
  </li>
  <li>
    <p align="left">aiclient-8~2-conditions-of-use.htm
    <ul>
      <li>
        <p align="left">Conditions of Use.</li>
    </ul>
  </li>
  <li>
    <p align="left">AiClient
    <ul>
      <li>
        <p align="left">This comprises a Microsoft Visual Studio project that
        contains <i> all</i> the (Visual C++) source and project control files ready to compile/link to
        generate a Debug mode version of the default
        (observer) client.</li>
      <li>
        <p align="left">The MFC (a) edition has been tested on Visual Studio 6
        under Windows 7. The source is probably suitable for later editions (at
        least up to 10), but the Visual Studio project itself would need converting
        or recreating.</li>
      <li>
        <p align="left">The non-MFC (b) version has been tested on Visual Studio
        6 and 10 (Express) under Windows 7. The source is probably be suitable for later editions
        than 6 (at least up to 10). It contains some project control files that are generated by, and
        are specific to, Visual Studio 6 and 10. These files safely coexist, but can be
        removed if not required by the edition used. (Recreate the project if
        unsure.)</li>
      <li>
        <p align="left">The MFC (a) form of JPN::Socket is provided for
        convenience/information, as it had already been produced for Release
        4~1, but should now be redundant: the non-MFC (b) form should be able to
        coexist with MFC if MFC is required. Nevertheless, the two forms provide
        a useful comparison, and may aid conversion. Likewise other differences
        in the two forms, which are more necessary, according to whether or not
        MFC is to be used.</li>
    </ul>
  </li>
  <li>
    <p align="left">Extras
    <ul>
      <li>
        <p align="left">This folder contains a folder of alternative,
        client-specific, files for generating each client when registered in the
        AiClient project:&nbsp;
        <ul>
          <li>
            <p align="left">BaseBot,</li>
          <li>
            <p align="left">DumbBot,</li>
          <li>
            <p align="left">HoldBot,</li>
          <li>
            <p align="left">RandBot.</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h2 align="left"><b>Client Documentation</b></h2>

<p align="left">See <a href="http://www.ellought.demon.co.uk/dipai/">David
Norman's site</a> and comments in the source for information about the clients themselves.</p>

<h2 align="left">Generating Clients</h2>
<p align="left">Each form of project, MFC (a) and non-MFC (b), is released ready
to generate the Debug version of the basic AiClient observer client. (It will
only observe and log, not play, in a game.) The details of how to use Visual
Studio depend on the edition&nbsp; used, and are outside the scope of this document. Visual Studio 6
will automatically generate a pre-processed version of the include files
specified by StdAfx.h. Visual Studio 10 seems to require this to be done
manually, but this is not essential, except to speed up compilation, which
should not be a problem with these small clients. If running the client outside
of the project, only the .exe file (in the Debug or Release folders, as
applicable) is required.</p>
<p align="left">To change clients:</p>
<ul>
  <li>
    <p align="left">Optionally, to avoid confusion, especially if modifying
    source, and to save work if repeatedly switching between clients, copy the <i>
    AiClient</i> folder and use the copy.</li>
  <li>
    <p align="left">Deregister (and optionally delete) any previous
    client-specific files from the project.</li>
  <li>
    <p align="left">Either:
    <ul>
      <li>
        <p align="left">Copy all the client-specific files from the appropriate
        folder (from within the <i>Extras</i> folder that is supplied with the
        release) into the main folder, or</li>
      <li>
        <p align="left">Delete any previous Bot_Type.h file from the main
        folder. Add the required client-specific folder to the list of include
        folders to be searched (in place of, or above, those of any clients
        previously added, to ensure the required Bot_Type.h file will be used).</li>
    </ul>
  </li>
  <li>
    <p align="left">Register the client-specific files in the project.</li>
  <li>
    <p align="left">Rebuild (not just <i>build</i>) the project (to replace any
    old, but no longer applicable, object files).</li>
  <li>
    <p align="left">Optionally, to avoid confusion, set Visual Studio to use the
    name of the new client as the name of the binary program that it will
    generate.</li>
</ul>

<h2 align="left">Requirements</h2>
<p align="left">The following auxiliary products are also required:</p>
<ul>
  <li>
    <p align="left">Windows XP or later.
  </li>
  <li>
    <p align="left"><a href="http://www.ellought.demon.co.uk/dipai/">AiServer 0.38</a> or
    later;&nbsp;<a href="../../aiserver/aiserver-0.38~1.1-release-notice.htm">AiServer 0.38~1.1</a>
    also corrects faults in some variants.
  </li>
  <li>
    <p align="left">Visual Studio 6 or later, if compiling the source.
  </li>
</ul>
<p align="left">All the above run under Microsoft Windows 7, but should all work
on Windows XP onwards. The MFC (a) form
has been tested in Visual Studio 6; the non-MFC version has been tested in
Visual Studio 6 and 10 (Express). However, a modification to Visual Studio 6 is desirable
on Windows 7, to allow the debugger to be stopped, without having to restart
Visual Studio. (Replace Common/MSDev98/Bin/TLLOC.dll in the Visual Studio
application folder by <a href="http://www.dr-hoiby.com/TLLOC.dll">http://www.dr-hoiby.com/TLLOC.dll</a> –
see <a href="http://stackoverflow.com/questions/2110759/how-to-debug-with-visual-c-6-on-windows-7-x64">http://stackoverflow.com/questions/2110759/how-to-debug-with-visual-c-6-on-windows-7-x64</a>
 .&nbsp;</p>
<h2 align="left">Change History</h2>
<p align="left">Most recent first ...</p>
<h3 align="left">AiClient 8~2</h3>
<ul>
  <li>
    <p align="left">Provided in two forms: (a) MFC; (b) non-MFC.
    <ul>
      <li>
        <p align="left">Each has its own form of the new JPN::Socket
        (socket handling)
        and AiClient (window handling) classes. Each form of JPN::Socket is now fully independent of
        DAIDE (hence renamed from JPN::DAIDE::Socket).</li>
      <li>
        <p align="left">&nbsp;(b) No longer uses the AiClientDlg class.</li>
      <li>
        <p align="left">&nbsp;(b) Adds a new JPN::String class (independent
        of&nbsp; DAIDE), which extends std::string, albeit currently only adding the extra CString functionality used by
        the framework and supplied clients.</li>
    </ul>
  </li>
  <li>
    <p align="left">Both forms updated to be more compliant with Visual Studio
    10 (which is more strict than 6 by default), with only modest suppression of
    specific warning messages.</li>
  <li>
    <p align="left">The &quot;family&quot; and &quot;generation&quot; of the
    client are now stored centrally in Bot_Type.h, from which the window
    &quot;title&quot; and &quot;name&quot; and &quot;version&quot; displayed by
    server are obtained. This simplifies changing clients
    within the project. (Name and version are typically the same as family and
    generation, respectively, and the title typically comprises both, but this
    need not be so; exceptions already exist in other clients.)</li>
  <li>
    <p align="left">For convenience, the updated source specific to several clients
    (BaseBot, DumbBot, HoldBot and RandBot) is located in the <i>Extras </i>folder in each form of project. This
    folder is not referenced by the
    project itself.</li>
  <li>
    <p align="left">To establish a firm base and to minimize confusion or error,
    the general release number (<i>8~2</i>) appears in a comment near the top of
    each source file, with a suffix (<i>~a</i> or <i>~b</i>) if and only if
    specific to the MFC (a) or non-MFC (b) forms, respectively. When run, the title bar and,
    unless just an observer, the list in AiServer, display the full
    release number (including suffix). Where more than such a change was made to
    a source file, a preceding comment states
    &quot;Modified by John Newbury&quot;. For best readably, individual changes are no
    longer identified (earlier such indications now removed); if required, best to
    use a text comparison program. (There is still only the one, original, copyright owner for
    a given file, as specified near the top of each file.)</li>
  <li>
    <p align="left">Normal logging is now generated by calling <i>log</i> (rather
    than <i>log_tcpip_note</i>) and goes to file biglog.txt (rather than
    tcpip_log.txt). (This log has long not been specific to TCP/IP). DumbBot also
    now uses <i> log</i> (rather than its own <i>log_debug</i>, which was only enabled in Debug
    mode (since its trace of AI activity can be equally useful in Release mode).
    Errors and warnings are still generated by calling <i>log_error</i>, but now go to
    file badlog.txt <i>and</i> biglog.txt (rather than just to error_log.txt).
    (Sending errors to badlog.txt allows a quick check, but sending them also to
    biglog.txt also usefully displays them in context.)</li>
  <li>
    <p align="left">As before, logging can be set on or off in any mode, but by
    default, it is now is set on in Debug mode; still off in Release mode. However,
    whether or not logging is enabled, &quot;Started&quot; is now sent as the
    first record and &quot;Finished&quot; as the last, in both log files. (It is
    useful at least to clear otherwise misleading previous logs;
    &quot;Finished&quot; indicates that the client exited cleanly, with all log
    messages flushed.)</li>
  <li>
    <p align="left">Now requires the keys of command-line arguments to be lower
    case. (Allows more (case-significant) simple options, as used in Unix; the &quot;-&quot;, rather than &quot;/&quot;, prefix already follows Unix, rather
    than Windows, standard.)</li>
  <li>
    <p align="left">Added &quot;-d&quot; command line argument to DumbBot to enable
    generation of CSV files. (These contain a summary of AI values used in a
    given turn; originally generated if and only if Debug mode. Usually unneeded
    clutter, but may be of value in any mode.)</li>
  <li>
    <p align="left">Removed the redundant &quot;Close&quot; button on the main
    window (the window-independent &quot;X&quot; can be used); added resizing and minimizing functionality. (This was the simplest
    way to make the window the same in both sub-products (without MFC there is
    no GUI design tool). In future, the now-empty window
    could be more usefully used to display state information or new controls.)</li>
  <li>
    <p align="left">Removed unnecessary file and line identification on each
    source file. (Redefinition of <i>new</i> in StdAfx.h in Debug mode labels leaked
    heap blocks, with or without MFC.)</li>
  <li>
    <p align="left">Removed all <i>#pragma once </i>lines. Not only are they
    non-portable, but also pointless (albeit generated by Visual; Studio wizards) when
    <i>inside</i> the functionally equivalent file-specific conditional #ifndef block.</li>
  <li>
    <p align="left">Further miscellaneous minor reorganization, renaming, pruning and other
    changes have been made – hopefully improvements. Some changes were to
    improve consistency between the two forms, or compliance with latest editions
    of Visual Studio.</li>
</ul>
<h3 align="left">AiClient 4~1</h3>
<ul>
  <li>
    <p align="left">Previously misleadingly called DumbBot 2~1. No longer distributed.</li>
  <li>
    <p align="left">Released as an updated AiClient Framework, but configured
    ready with the client-specific source of DumbBot 4. (The resultant binary
    misleadingly declared itself to be version as 2.1; version 4~1 would have
    been more systematic and correct.) The AiClient Framework source could be
    used to update HoldBot
    and RandBot, using their client-specific sources, available in <a href="../aiclient-4~0/index.htm">AiClient
    4~0</a> and from <a href="http://www.ellought.demon.co.uk/dipai/">David
    Norman's site</a>. (These are both version 2; ideally named version 4~1
    when using this AiClient Framework.)</li>
  <li>
    <p align="left">Corrects HUH replies.</li>
  <li>
    <p align="left">No longer uses Andrew Rose's cspdll (.LIB or .DLL) – for which no cpp source
    can be released – nor the associated dcsp* header files.
    <ul>
      <li>
        <p align="left">All TCP/IP code is now incorporated within the new
        JPN::DAIDE::Socket class, based on (MFC) CSockets.</li>
      <li>
        <p align="left">No longer uses &quot;local&quot; messages.</li>
    </ul>
  </li>
  <li>
    <p align="left">Allows substitution of an argument list in logging messages.</li>
  <li>
    <p align="left">Inhibits production of CSV files.</li>
  <li>
    <p align="left">By default, just logs certain errors, rather than displaying
    them and awaiting user response.</li>
  <li>
    <p align="left">Eliminates the (modest) memory leaks that previously to occurred in
    certain circumstances, thereby aiding identification other, possibly more
    serious, memory leaks.</li>
  <li>
    <p align="left">Added file and line identification on <i>all</i> cpp files,
    thereby identifying the source of <i>any</i> leaked heap storage created by <i>any</i>
    code in this project.</li>
  <li>
    <p align="left">Removed a compile-time pragma message.</li>
  <li>
    <p align="left">For information, all modifications by John Newbury to David
    Norman's files are identified by blocks beginning #ifdef JPN. Some may not
    be essential or optimal. Copyright to
    these blocks is assigned to David Norman; the identification may be removed
    if desired.</li>
</ul>
<h3 align="left">AiClient 4~0</h3>
<ul>
  <li>
    <p align="left"><a href="../aiclient-4~0/index.htm">This</a> is an archive
    of the full (common and client-specific) source and binary of BaseBot 4, DumbBot 4, HoldBot 2 and RandBot
    2 – parts of
    which are no longer obtainable from <a href="http://www.ellought.demon.co.uk/dipai/">David
    Norman's site</a> – (essentially) as used by John Newbury's <a href="../../../tournaments/index.htm">Tournaments</a>
        and <a href="../../../demo/saga.htm">SAGA</a>/<a href="../../../demo/arena.htm">ARENA</a>
    tests (begun 25 April 2005).</li>
</ul>
<h2 align="left">Known Issues</h2>
<p align="left">No known issues.</p>
<h2 align="left">Future Development</h2>
<p align="left">No further development is planned for the AiClient Framework or the above DAIDE clients, as such. However,
when development is complete, <a href="../../../blabbot/index.htm">BlabBot
3</a>, which is derived from DumbBot, and hence the AiClient Framework, is to be
released, along with its source. This will probably first be converted to
non-MFC.<p align="left">Any
further significant development by John Newbury, of this or any other software product, is likely to be for
non-MFC (b) forms only, using the free and portable wxWidgets library where non-trivial
windowing is required.<p align="left">The non-MFC (b) form of JPN::Sockets is to
be enhanced to
handle server-side sockets in the next release (with source) of <a href="../../../demo/mars.htm">MARS</a>.
It would probably be reasonably easy to transfer this enhancement to
the MFC (a) form if required, but is probably unnecessary, as it should be able
to coexist with MFC if MFC required.<p align="left">JPN::String could usefully
be derived from CString (as well as std::string), because the source of CString
is supplied with MFC. (There are no obvious licence restrictions.)

<h2 align="left">Acknowledgements</h2>
<p align="left">The bulk of the product was produced by <a href="http://www.ellought.demon.co.uk/dipai/"> David
Norman</a>. Grateful
thanks are also due to those in the DAIDE <a href="https://groups.yahoo.com/neo/groups/dipai/info">DipAi</a>
 group who have contributed ideas over the years.<br>

<hr size="6" noshade color="#00FFFF">

<div align="center">
  <table border="0" width="634">
    <tr>
      <td class="title" width="626">
        <p align="center">Tracking, including use of cookies, is used by this website: see <a href="../../../../logging.htm">Logging</a>.<br>
        Comments about this page are welcome: please post to <a href="https://groups.yahoo.com/neo/groups/dipai/info">DipAi</a>
        or email to <a href="../../../../aboutme.htm">me</a>.</p>
      </td>
    </tr>
  </table>
</div>

</body>
</html>
